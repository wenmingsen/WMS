<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csg.statistics.mapper.DrtOprPointsMonitoringMapper">
    
       <!-- 获取积分信息 -->
     <select id="queryEarnings" resultType="java.util.Map" parameterType="java.util.Map">
    	SELECT MIN(F.EARNINGS) earningsMin, MAX(F.EARNINGS) earningsMax,SUM(F.EARNINGS) earningsSum
    	FROM drt_fin_all_earnings_record F
    	WHERE F.FROM_TYPE= #{type} AND #{todayTime} > F.RECORD_TIME  AND F.RECORD_TIME >= #{yesterdayTime}
    </select>
    
     <!-- 获取一周的积分总数为0-1k -->
    <select id="queryLevel1WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.EARNINGS),F.ACCOUNT_ID
		FROM drt_fin_all_earnings_record F
		WHERE F.FROM_TYPE= #{type} AND #{todayTime} > F.RECORD_TIME  AND F.RECORD_TIME >= #{weekAgoTime}
		GROUP BY F.ACCOUNT_ID
		HAVING 1000 > SUM(F.EARNINGS)
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
    
     <!-- 获取一周的积分总数为1k- 5k-->
   <select id="queryLevel2WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.EARNINGS),F.ACCOUNT_ID
		FROM drt_fin_all_earnings_record F
		WHERE F.FROM_TYPE= #{type} AND #{todayTime} > F.RECORD_TIME  AND F.RECORD_TIME >= #{weekAgoTime}
		GROUP BY F.ACCOUNT_ID
		HAVING 5000 > SUM(F.EARNINGS) AND SUM(F.EARNINGS) >= 1000
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
     <!-- 获取一周的积分总数为5k- 10k-->
    <select id="queryLevel3WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.EARNINGS),F.ACCOUNT_ID
		FROM drt_fin_all_earnings_record F
		WHERE F.FROM_TYPE= #{type} AND #{todayTime} > F.RECORD_TIME  AND F.RECORD_TIME >= #{weekAgoTime}
		GROUP BY F.ACCOUNT_ID
		HAVING 10000 > SUM(F.EARNINGS) AND SUM(F.EARNINGS) >= 5000
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
    
     <!--获取 一周的积分总数为10k以上-->
    <select id="queryLevel4WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.EARNINGS),F.ACCOUNT_ID
		FROM drt_fin_all_earnings_record F
		WHERE F.FROM_TYPE= #{type} AND #{todayTime} > F.RECORD_TIME  AND F.RECORD_TIME >= #{weekAgoTime}
		GROUP BY F.ACCOUNT_ID
		HAVING SUM(F.EARNINGS) >= 10000
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
    
    <!-- 消费积分信息 -->
    <select id="queryConsumeEarnings" resultType="java.util.Map" parameterType="java.util.Map">
    	SELECT MIN(F.order_earnings) earningsMin, MAX(F.order_earnings) earningsMax, SUM(F.order_earnings) earningsSum
		FROM drt_shop_order F
    	WHERE #{todayTime} > F.create_time  AND F.create_time >= #{yesterdayTime}
    </select>
    
    <!-- 一周的消费积分总数为0-1k -->
    <select id="queryConsumeLevel1WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1)
	FROM(SELECT SUM(F.order_earnings),F.account_id
		FROM drt_shop_order F
		WHERE #{todayTime} > F.create_time  AND F.create_time >= #{weekAgoTime}
		GROUP BY F.account_id
		HAVING 1000 > SUM(F.order_earnings)
		AND F.account_id IS NOT NULL) p
    </select>
    <!-- 一周的消费积分总数为1k- 5k -->
    <select id="queryConsumeLevel2WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1)
	FROM(SELECT SUM(F.order_earnings),F.account_id
		FROM drt_shop_order F
		WHERE #{todayTime} > F.create_time  AND F.create_time >= #{weekAgoTime}
		GROUP BY F.account_id
		HAVING 5000 > SUM(F.order_earnings) AND SUM(F.order_earnings) >= 1000
		AND F.account_id IS NOT NULL) p
    </select>
    <!-- 一周的消费积分总数为5k- 10k -->
    <select id="queryConsumeLevel3WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1)
	FROM(SELECT SUM(F.order_earnings),F.account_id
		FROM drt_shop_order F
		WHERE #{todayTime} > F.create_time  AND F.create_time >= #{weekAgoTime}
		GROUP BY F.account_id
		HAVING 10000 > SUM(F.order_earnings) AND SUM(F.order_earnings) >= 5000
		AND F.account_id IS NOT NULL) p
    </select>
    <!-- 一周的消费积分总数为10k以上 -->
    <select id="queryConsumeLevel4WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1)
	FROM(SELECT SUM(F.order_earnings),F.account_id
		FROM drt_shop_order F
		WHERE #{todayTime} > F.create_time  AND F.create_time >= #{weekAgoTime}
		GROUP BY F.account_id
		HAVING SUM(F.order_earnings) >= 10000
		AND F.account_id IS NOT NULL) p
    </select>
    
    
     <!-- 剩余积分信息 -->
    <select id="queryRemainEarnings" resultType="java.util.Map" >
    	SELECT MIN(F.TOTAL_EARNINGS) earningsMin, MAX(F.TOTAL_EARNINGS) earningsMax, SUM(F.TOTAL_EARNINGS) earningsSum
		FROM drt_account F
    </select>
    <!-- 剩余积分数为0- 5k -->
    <select id="queryRemainLevel1WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.TOTAL_EARNINGS),F.ACCOUNT_ID
		FROM drt_account F
		WHERE #{todayTime} > F.CREATE_TIME
		GROUP BY F.ACCOUNT_ID
		HAVING 1000 > SUM(F.TOTAL_EARNINGS)
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
    <!-- 剩余积分数为1k- 5k -->
    <select id="queryRemainLevel2WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.TOTAL_EARNINGS),F.ACCOUNT_ID
		FROM drt_account F
		WHERE #{todayTime} > F.CREATE_TIME
		GROUP BY F.ACCOUNT_ID
		HAVING 5000 > SUM(F.TOTAL_EARNINGS) AND SUM(F.TOTAL_EARNINGS) >=  1000 
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
    <!-- 剩余积分数为5k- 10k -->
    <select id="queryRemainLevel3WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.TOTAL_EARNINGS),F.ACCOUNT_ID
		FROM drt_account F
		WHERE #{todayTime} > F.CREATE_TIME
		GROUP BY F.ACCOUNT_ID
		HAVING 10000 > SUM(F.TOTAL_EARNINGS) AND SUM(F.TOTAL_EARNINGS) >=  5000 
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
    <!-- 剩余积分数为10k以上 -->
    <select id="queryRemainLevel4WeekNum" parameterType="java.util.Map" resultType="int" >
    SELECT COUNT(1) 
	FROM(SELECT SUM(F.TOTAL_EARNINGS),F.ACCOUNT_ID
		FROM drt_account F
		WHERE #{todayTime} > F.CREATE_TIME
		GROUP BY F.ACCOUNT_ID
		HAVING SUM(F.TOTAL_EARNINGS) >=  10000
		AND F.ACCOUNT_ID IS NOT NULL) p
    </select>
    
    
    <insert id="insertMonitorPoints" parameterType="com.csg.statistics.entity.DrtMonitorPointsDay">
    
   INSERT INTO drt_monitor_points_day(
		id,
		present_date,
		consume_earnings,
		consume_earnings_max,
		consume_earnings_min,
		consume_level1_week_num,
		consume_level2_week_num,
		consume_level3_week_num,
		consume_level4_week_num,
		proceeds_earnings,
		proceeds_earnings_max,
		proceeds_earnings_min,
		proceeds_level1_week_num,
		proceeds_level2_week_num,
		proceeds_level3_week_num,
		proceeds_level4_week_num,
		spread_earnings,
		spread_earnings_max,
		spread_earnings_min,
		spread_level1_week_num,
		spread_level2_week_num,
		spread_level3_week_num,
		spread_level4_week_num,
		payment_earnings,
		payment_earnings_max,
		payment_earnings_min,
		payment_level1_week_num,
		payment_level2_week_num,
		payment_level3_week_num,
		payment_level4_week_num,
		remain_earnings,
		remain_earnings_max,
		remain_earnings_min,
		remain_level1_week_num,
		remain_level2_week_num,
		remain_level3_week_num,
		remain_level4_week_num )
	VALUES(
		#{id},
		#{presentDate},
		#{consumeEarnings},
		#{consumeEarningsMax},
		#{consumeEarningsMin},
		#{consumeLevel1WeekNum},
		#{consumeLevel2WeekNum},
		#{consumeLevel3WeekNum},
		#{consumeLevel4WeekNum},
		#{proceedsEarnings},
		#{proceedsEarningsMax},
		#{proceedsEarningsMin},
		#{proceedsLevel1WeekNum},
		#{proceedsLevel2WeekNum},
		#{proceedsLevel3WeekNum},
		#{proceedsLevel4WeekNum},
		#{spreadEarnings},
		#{spreadEarningsMax},
		#{spreadEarningsMin},
		#{spreadLevel1WeekNum},
		#{spreadLevel2WeekNum},
		#{spreadLevel3WeekNum},
		#{spreadLevel4WeekNum},
		#{paymentEarnings},
		#{paymentEarningsMax},
		#{paymentEarningsMin},
		#{paymentLevel1WeekNum},
		#{paymentLevel2WeekNum},
		#{paymentLevel3WeekNum},
		#{paymentLevel4WeekNum},
		#{remainEarnings},
		#{remainEarningsMax},
		#{remainEarningsMin},
		#{remainLevel1WeekNum},
		#{remainLevel2WeekNum},
		#{remainLevel3WeekNum},
		#{remainLevel4WeekNum})
    </insert>
</mapper>